{"version":3,"sources":["components/Notification.js","components/Layout.js","components/Hero.js","services/blogs.js","components/BlogForm.js","components/BlogList.js","services/login.js","components/Login.js","components/Blog.js","App.js","reportWebVitals.js","index.js"],"names":["Notification","message","user","username","Layout","setUser","children","className","to","onClick","window","localStorage","removeItem","Hero","style","height","objectFit","src","alt","baseUrl","token","exports","getAll","axios","get","then","res","data","create","newObj","a","config","headers","Authorization","post","response","destroy","id","delete","setToken","newToken","BlogForm","setBlogs","blogs","initialValues","title","author","content","validationSchema","Yup","max","required","onSubmit","values","setSubmitting","resetForm","newBlog","image","blogService","returnedBlog","setTimeout","placeholder","name","type","autoFocus","as","BlogList","map","blog","filter","b","login","credentials","Login","setMessage","history","useHistory","password","loginService","setItem","JSON","stringify","location","pathname","goForward","goBack","htmlFor","Blog","blogTitle","useParams","find","App","useState","console","log","useEffect","blogsService","allBlogs","loggedUserJson","getItem","parse","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca13b054.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Notification({ message, user }) {\n  return (\n    <div>\n      {message !== null && user !== null && (\n        <h1> {user.username} is logged in</h1>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Notification from './Notification'\n\nexport default function Layout({ user, setUser, children, message }) {\n  const handleLogout = () => {\n    window.localStorage.removeItem('loggedBlogappUser')\n    setUser(null)\n  }\n  return (\n    <div>\n      <nav>\n        <ul className=\"flex items-center my-4 mx-4 justify-between\">\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <Notification user={user} message={message} />\n          <div className=\"flex items-center gap-6\">\n            <li>\n              {user === null ? (\n                <Link to=\"/login\">Login</Link>\n              ) : (\n                <button onClick={handleLogout}>Logout</button>\n              )}\n            </li>\n            <li className=\"border rounded-full border-green-300 px-4 py-2\">\n              <Link to=\"/create\">Write</Link>\n            </li>\n          </div>\n        </ul>\n      </nav>\n      {children}\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function Hero() {\n  return (\n    <div className=\"\">\n      <h1 className=\"absolute top-64 right-0 left-0 mx-auto w-full text-white font-mono text-7xl text-center\">\n        Sean's Medium\n      </h1>\n      <img\n        style={{ height: '500px', objectFit: 'cover' }}\n        className=\"w-full\"\n        src=\"https://images.unsplash.com/photo-1554118811-1e0d58224f24?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1330&q=80\"\n        alt=\"Landing Page Hero\"\n      />\n    </div>\n  )\n}\n","import axios from 'axios'\n// const baseUrl = 'https://murmuring-spire-22088.herokuapp.com/api/blogs'\n// const baseUrl = 'http://localhost:3001/api/blogs'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const req = axios.get(baseUrl)\n  return req.then((res) => res.data)\n}\n\nconst create = async (newObj) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.post(baseUrl, newObj, config)\n\n  return response.data\n}\n\nconst destroy = (id) => {\n  const req = axios.delete(`${baseUrl}/${id}`)\n  return req.then((res) => res.data)\n}\n\nconst exports = {\n  getAll,\n  create,\n  destroy,\n  setToken,\n}\n\nexport default exports\n","import { Formik, Field, Form } from 'formik'\nimport * as Yup from 'yup'\nimport blogService from '../services/blogs'\n\nexport default function BlogForm({ setBlogs, blogs }) {\n  return (\n    <Formik\n      initialValues={{ title: '', author: '', content: '' }}\n      validationSchema={Yup.object({\n        title: Yup.string()\n          .max(45, 'Must be 15 characters or less')\n          .required('Required '),\n        author: Yup.string()\n          .max(20, 'Must be 20 characters or less')\n          .required('Required '),\n        content: Yup.string().required('Required '),\n      })}\n      onSubmit={(values, { setSubmitting, resetForm }) => {\n        const { title, author, content, image } = values\n        const newBlog = {\n          title,\n          author,\n          content,\n          image,\n        }\n        blogService.create(newBlog).then((returnedBlog) => {\n          setBlogs([...blogs, newBlog])\n        })\n        setTimeout(() => {\n          setSubmitting(false)\n          resetForm({\n            values: {\n              // the type of `values` inferred to be Blog\n              title: '',\n              author: '',\n              content: '',\n              image: '',\n            },\n            // you can also set the other form states here\n          })\n        }, 400)\n      }}\n    >\n      <Form className=\"flex flex-col gap-10 w-7/12 mx-auto\">\n        <div>\n          {/* <label htmlFor=\"title\">Title</label> */}\n          <Field\n            placeholder=\"Title\"\n            className=\"w-full text-3xl font-mono focus:outline-none\"\n            name=\"title\"\n            type=\"text\"\n          />\n          {/* <ErrorMessage name=\"title\" /> */}\n        </div>\n        <div>\n          {/* <label htmlFor=\"content\">Tell your story</label> */}\n          <Field\n            autoFocus={true}\n            placeholder=\"Tell your story\"\n            className=\"w-full h-64 focus:outline-none\"\n            as=\"textarea\"\n            name=\"content\"\n            type=\"text\"\n          />\n          {/* <ErrorMessage name=\"content\" /> */}\n        </div>\n        <div>\n          {/* <label htmlFor=\"author\">Author</label> */}\n          <Field\n            placeholder=\"Author\"\n            className=\"w-full focus:outline-none\"\n            name=\"author\"\n            type=\"text\"\n          />\n          {/* <ErrorMessage name=\"author\" /> */}\n        </div>\n        <div>\n          {/* <label htmlFor=\"author\">Author</label> */}\n          <Field\n            placeholder=\"Image URL\"\n            className=\"w-full focus:outline-none\"\n            name=\"image\"\n            type=\"url\"\n          />\n          {/* <ErrorMessage name=\"author\" /> */}\n        </div>\n\n        <button\n          type=\"submit\"\n          className=\"bg-gray-100 w-min flex self-center px-10 py-2 rounded-full font-mono\"\n        >\n          Publish\n        </button>\n      </Form>\n    </Formik>\n  )\n}\n","import React from 'react'\nimport blogService from '../services/blogs'\nimport { Link } from 'react-router-dom'\n\nexport default function BlogList({ blogs, setBlogs, user }) {\n  const handleDestroy = (id) => {\n    setBlogs(blogs.filter((b) => b.id !== id))\n    blogService.destroy(id)\n  }\n  return (\n    <div>\n      {blogs.map((blog) => (\n        <div\n          className=\"flex items-center justify-between w-8/12 mx-auto my-10\"\n          key={blog.id}\n        >\n          <div>\n            <h1 className=\"font-mono border-b-8 border-yellow-200\">\n              <Link to={`/blogs/${blog.title}`}>\n                {blog.title} {blog.author && `by ${blog.author}`}\n              </Link>\n            </h1>\n            <p className=\"truncate w-96\">{blog.content}</p>\n          </div>\n          {user !== null && blog.user && blog.user.username === user.username && (\n            <button\n              onClick={() => handleDestroy(blog.id)}\n              className=\"bg-red-500 text-white rounded-full px-10 py-2\"\n            >\n              Destroy Blog\n            </button>\n          )}\n        </div>\n      ))}\n    </div>\n  )\n}\n","import axios from 'axios'\n// const baseUrl = 'http://localhost:3001/api/login'\nconst baseUrl = '/api/login'\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nconst exports = {\n  login,\n}\n\nexport default exports\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Formik, Field, Form } from 'formik'\nimport * as Yup from 'yup'\nimport loginService from '../services/login'\nimport blogService from '../services/blogs'\n\nconst Login = ({ setUser, setMessage }) => {\n  const history = useHistory()\n  return (\n    <Formik\n      initialValues={{ username: '', password: '' }}\n      validationSchema={Yup.object({\n        username: Yup.string()\n          .max(40, 'Must be 40 characters or less')\n          .required('Required'),\n        password: Yup.string().required('Required'),\n      })}\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\n        const { username, password } = values\n\n        try {\n          const user = await loginService.login({ username, password })\n          window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user))\n          blogService.setToken(user.token)\n          setUser(user)\n          setMessage('Correct credentials')\n        } catch (exception) {\n          setMessage('Wrong credentials')\n        }\n        setTimeout(() => {\n          setMessage(null)\n          setSubmitting(false)\n          resetForm({\n            values: {\n              // the type of `values` inferred to be Blog\n              username: '',\n              password: '',\n            },\n            // you can also set the other form states here\n          })\n          history.location.pathname === '/create'\n            ? history.goForward()\n            : history.goBack()\n        }, 1000)\n      }}\n    >\n      <Form className=\"flex flex-col w-4/12 mx-auto\">\n        <div className=\"flex flex-col py-4\">\n          <label htmlFor=\"username\">Username</label>\n          <Field className=\"border p-1\" name=\"username\" type=\"text\" />\n          {/* <ErrorMessage name=\"lastName\" /> */}\n        </div>\n\n        <label htmlFor=\"password\">Password</label>\n        <Field className=\"border p-1\" name=\"password\" type=\"password\" />\n        {/* <ErrorMessage name=\"email\" /> */}\n\n        <button\n          className=\"border border-green-200 rounded-full w-max px-4 py-3 mx-auto mt-4\"\n          type=\"submit\"\n        >\n          Submit\n        </button>\n      </Form>\n    </Formik>\n  )\n}\n\nexport default Login\n","import React from 'react'\nimport { useParams } from 'react-router-dom'\n\nexport default function Blog({ blogs }) {\n  let { blogTitle } = useParams()\n  const blog = blogs.find((b) => b.title === blogTitle)\n  return (\n    <div className=\"w-6/12 mx-auto\">\n      <h1 className=\"text-4xl font-mono\">{blog.title}</h1>\n      <h4>{blog.author && `~ ${blog.author}`}</h4>\n      {blog.image && (\n        <div className=\"my-8\">\n          <img src={blog.image} alt={`${blog.title}`} />\n        </div>\n      )}\n      <p className=\"mt-10 tracking-wider leading-8\">{blog.content}</p>\n      <p className=\"tracking-wider leading-8\">\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit\n        quibusdam hic sequi a tempore asperiores eius est placeat? Nihil,\n        expedita quasi? Consectetur eligendi beatae vitae, incidunt autem\n        explicabo suscipit obcaecati at dignissimos ea recusandae quidem velit.\n        Vitae rerum omnis consectetur officiis reiciendis quod adipisci! Ea\n        pariatur accusamus laboriosam id placeat cum rerum dicta, corporis\n        repellat temporibus sunt. Fugiat nesciunt ut a voluptas officiis. Aut\n        dolorem, voluptatibus laborum tempore incidunt aperiam consectetur\n        provident, pariatur voluptas necessitatibus amet architecto fugiat\n        cumque eius rerum, non ipsum nulla nesciunt cum perferendis est esse.\n        Sapiente velit esse ipsa dolores ipsam autem, necessitatibus dolor\n        tenetur optio?\n      </p>\n    </div>\n  )\n}\n","import './App.css'\nimport Layout from './components/Layout'\nimport Hero from './components/Hero'\nimport BlogForm from './components/BlogForm'\nimport BlogList from './components/BlogList'\nimport Login from './components/Login'\nimport Blog from './components/Blog'\nimport { useState, useEffect } from 'react'\nimport blogsService from './services/blogs'\nimport { Switch, Route } from 'react-router-dom'\n\nfunction App() {\n  const [blogs, setBlogs] = useState([])\n  const [user, setUser] = useState(null)\n  const [message, setMessage] = useState(null)\n  console.log('user: ', user)\n  console.log('blogs: ', blogs)\n\n  useEffect(() => {\n    blogsService.getAll().then((allBlogs) => {\n      setBlogs(allBlogs)\n    })\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJson = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJson) {\n      const user = JSON.parse(loggedUserJson)\n      setUser(user)\n      blogsService.setToken(user.token)\n    }\n  }, [])\n\n  return (\n    <Layout message={message} user={user} setUser={setUser}>\n      <Switch>\n        <Route path={`/blogs/:blogTitle`}>\n          <Blog blogs={blogs} />\n        </Route>\n        <Route path=\"/create\">\n          {user === null ? (\n            <Login setUser={setUser} setMessage={setMessage} />\n          ) : (\n            <BlogForm setBlogs={setBlogs} blogs={blogs} />\n          )}\n        </Route>\n        <Route path=\"/login\">\n          <Login setUser={setUser} setMessage={setMessage} />\n        </Route>\n        <Route path=\"/\">\n          {/* LandingPage */}\n          <Hero />\n          <BlogList setBlogs={setBlogs} blogs={blogs} user={user} />\n        </Route>\n      </Switch>\n    </Layout>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}